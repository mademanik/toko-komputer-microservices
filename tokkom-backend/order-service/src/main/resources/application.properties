spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/tokkom_order_db
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update

eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

spring.application.name=order-service
server.port=0

#zipkin sleuth config
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

#Product Stock Url
productStockUrl = http://localhost:8080/tokkom/api/product/stock/

##Resilience4j Properties
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always 

resilience4j.circuitbreaker.instances.orderService.register-health-indicator=true
resilience4j.circuitbreaker.instances.orderService.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.orderService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.orderService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.orderService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.orderService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.orderService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.orderService.sliding-window-size=10
resilience4j.circuitbreaker.instances.orderService.sliding-window-type=COUNT_BASED

#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:org.tokkom.order.dto.request.NotificationRequest

spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true